#########################
### Fedora 19 install ###
#########################

###########
### yum ###
###########

yum update                # update toate pachetele si dependintele lor
yum search nume_pachet        # cauta un anume pachet, pot fi mai multe pachete trecute
yum info nume_pachet        # afiseaza detalii despre un anume pachet
yum list nume_pache            # afiseaza informatii despre un anumit pachet, instalat sau nu
yum list nume_pachet\*         # afiseaza informatii despre toate pachetele care incep cu un nume
yum list all                # afiseaza toate pachetele disponibile 
yum list installed "*nume_pachet*"  # afiseaza pachetele instalate care contine un nume
yum list installed | grep reponame  # afiseaza pachetele instalate dintr-un repo
yum list available        # afiseaza pachetele disponibile in functie de repo-urile instalate
yum repolist                # afiseaza repo-urile instalate
yum gruplist                # afiseaza
yum install nume_pachet\* # instaleaza toate pachetele care incep cu un nume
yum downgrade nume_pachet
yum provides "*/nume_pachet" # afiseaza fisierele care le detine un pachet
yum -v grouplist kde\*  # listeaza toate pachetele ce tin de KDE
yum groupinstall "KDE Software Compilation" # instaleaza toate pachetele ce tin de KDE
yum groupinstall kde-desktop
yum install @kde-desktop  # @ pentru a instala un grup
yum remove nume_pachet
yum groupremove "KDE Software Compilation"
yum groupremove kde-desktop
yum remove @kde-desktop
yum history list
yum history list nume_pachet
yum repolist all  # list all repositories set up on your system
yum --exclude=packagename\* ...

################
### yum.conf ###
################

### skip updating packages ###
yum -x nume_pachet update
yum --exclude=nume_pachet update

sudo vim /etc/yum.conf  # permanent
_______
[main]
exclude=nume_pachet1* nume_pachet2*
_______
yum --disableexcludes=all update  # disable exclude to check for an update


### Remove Old Kernels ###
# Package-cleanup set count as how many old kernels you want left #
package-cleanup --oldkernels --count=2

# Make Amount of Installed Kernels Permanent #
vim /etc/yum.conf # and set installonly_limit:
installonly_limit=2

### Removing dependencies ###
sudo vim /etc/yum.conf
______________________________
[main]
clean_requirements_on_remove=1
______________________________


###########
### RPM ###
###########

rpm -ivh package-2.7.9-5.el6.2.i686.rpm  # Install an RPM Package
-i : install a package
-v : verbose for a nicer display
-h: print hash marks as the package archive is unpacked

rpm -qpR package-5.2.2-1.noarch.rpm   # check dependencies of RPM Package before Installing
-q : Query a package
-p : List capabilities this package provides.
-R: List capabilities on which this package depends..

rpm -ivh --nodeps package-5.2.2-1.noarch.rpm  # Install a RPM Package Without Dependencies
â€“nodeps (Do not check dependencies)

rpm -q package   # check an Installed RPM Package
rpm -ql package  # List all files of an installed RPM package

rpm -qa --last  # List Recently Installed RPM Packages
rpm -qa                # List All Installed RPM Packages

rpm -Uvh package-3.5.0-2.el6.centos.i686.rpm  # Upgrade a RPM Package

rpm -evv package  # Remove a RPM Package
rpm -ev --nodeps package  # Remove an RPM Package Without Dependencies
-e (erase)

rpm -qi package  # Query a Information of Installed RPM Package
-qi (query info)

rpm -qf /usr/bin/package  # Query a file that belongs which RPM Package
-qf (query file)

rpm -qip package-1.3.3-1.noarch.rpm  # Information of RPM Package Before Installing
-qip (query info package)

rpm -qdf /usr/bin/vmstat  # Query documentation of Installed RPM Package
-qdf (query document file)

rpm -Vp package-1.3.3-1.noarch.rpm  # Verify a RPM Package
-Vp (verify package)
rpm -Va  # Verify all RPM Packages

rpm -qa gpg-pubkey*  # List all Imported RPM GPG keys


######################
### YUM & RPM tips ###
######################

#Query packages not from CentOS #
rpm -qa --qf '%{NAME} %{VENDOR}\n' | grep -v CentOS

# Reset File Permissions #
rpm --setperms <packagename>

# View the Changelog of a package #
rpm -q --changelog <packagename> | less

# quickly list documentation relating to a package #
rpm -qd <packagename>

# Query Package Install Order and Dates #
rpm -qa --last > ~/RPMS_by_Install_Date

# Query Available Packages from a Repo #
yum --disablerepo "*" --enablerepo "rpmforge" list available 

# Enable or Disable a Repo from the Command Line #
yum-config-manager --enable c6-media
yum-config-manager --disable c6-media

# Show all installed GPG keys #
rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\n'


### package-cleanup ###
package-cleanup --orphans
package-cleanup --leaves
package-cleanup --dupes
package-cleanup --problems
package-cleanup --oldkernel



#############
### Repos ###
#############

### rpm-sphere ###
sudo vim /etc/yum.repos.d/rpm-sphere.repo
_________________________________________
[rpm-sphere]
name=RPM Sphere
baseurl=http://download.opensuse.org/repositories/home:/zhonghuaren/Fedora_19/
gpgkey=http://download.opensuse.org/repositories/home:/zhonghuaren/Fedora_19/repodata/repomd.xml.key
enabled=1
gpgcheck=1
_________________________________________


### rpmfusion ###
su -c 'yum localinstall --nogpgcheck http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm'

# Install nVidia driver #
yum install akmod-nvidia
yum install vdpauinfo libva-vdpau-driver libva-utils  # to enable video acceleration support
yum remove xorg-x11-drv-nvidia\* nvidia-settings nvidia-xconfig  # to uninstall nVidia Driver Packages


### steam ###
sudo vim /etc/yum.repos.d/steam.repo
____________________________________
[steam]
name=Steam RPM packages (and dependencies) for Fedora
baseurl=http://spot.fedorapeople.org/steam/fedora-$releasever/
enabled=1
skip_if_unavailable=1
gpgcheck=0
____________________________________



### VirtualBox Linux Guest Additions ###
sudo yum install gcc kernel-devel dkms
