##########################
### CrunchBang install ###
##########################


### nVidia install ####
sudo apt-get install nvidia-glx
sudo cp /etc/X11/xorg.conf{,.bkp}
sudo apt-get install nvidia-xconfig nvidia-settings
sudo nvidia-xconfig
sudo reboot

# For custom kernel #
sudo apt-get install module-assistant nvidia-kernel-common
sudo m-a auto-install nvidia-kernel-source
sudo apt-get install nvidia-glx
sudo cp /etc/X11/xorg.conf{,.bkp}
sudo apt-get install nvidia-xconfig nvidia-settings
sudo nvidia-xconfig
sudo reboot

### GIT HUB ###
ssh-keygen -t rsa -C "contact.sergiuniculescu@gmail.com"
vim ~/.ssh/id_rsa.pub  # copy key and paste it to github.com

git config --global user.name "Sergiu Niculescu"
git config --global user.email contact.sergiuniculescu@gmail.com


### Sound ###
sudo vim /etc/pulse/daemon.conf
_______________________________
enable-remixing = yes
enable-lfe-remixing = yes
default-sample-channels = 6
________________________________

pulseaudio -k  # restart pulseaudio
speaker-test -c 6


### Tv-maxe install ###

dpkg --add-architecture i386 (just for x86_64 distro)
apt-get update
apt-get install libstdc++5:i386 (for x86 I guess: apt-get install libstdc++5)
apt-get install python-gst0.10 python-imaging rtmpdump wget make python-glade2
(may need vlc and mplayer and therefore can install preventive with a simple apt-get install vlc mplayer)


Now change directory...:

cd /tmp

and download this:

wget https://tv-maxe.googlecode.com/files/tv-maxe-0.09.tar.gz

Now...:

tar -zxvf tv-maxe-0.09.tar.gz
cp -r tv-maxe-0.09 /opt/tv-maxe


wget http://sopcast-player.googlecode.com/files/sp-auth-3.2.6.tar.gz
tar -zxvf sp-auth-3.2.6.tar.gz
cd sp-auth
make install

After this...let`s install....:

Write this in terminal:

nano /opt/tv-maxe/tvmaxe.sh

...and write this two lines:

#!/bin/bash
cd /opt/tv-maxe && python tvmaxe.py &

save`it....

chmod +x /opt/tv-maxe/tvmaxe.sh

Now put this in startup....


nano /usr/share/applications/tv-maxe.desktop

...an write this lines..:

[Desktop Entry]
Name=TV-Maxe
GenericName=TV-Maxe
Comment=tv-internet
Exec=/opt/tv-maxe/tvmaxe.sh
Icon=/opt/tv-maxe/tvmaxe.png
Terminal=false
Type=Application
Categories=AudioVideo;Player;

Save and exit....and you have Tv-Maxe on Debian wheezy....in Multimedia menu...

(you can make clean in /tmp....cd /tmp
rm -rf tv-maxe-0.09.tar.gz tv-maxe-0.09/ sp-auth-3.2.6.tar.gz sp-auth/)


### Skype install ###
dpkg --add-architecture i386
apt-get update
wget -O skype-install.deb http://www.skype.com/go/getskype-linux-deb
dpkg -i skype-install.deb
apt-get -f install
apt-get install libpulse0:i386


####################################
### Debian Protection & Security ###
####################################

### Password Protect Grub2 ###
sudo grub-mkpasswd-pbkdf2
sudo vim /etc/grub.d/00_header
____________________________________________________
# Password Protect
cat << EOF
set superusers="sergiu"
password_pbkdf2 sergiu grub.pbkdf2.sha512.10000.hash
EOF
____________________________________________________

sudo update-grub



########################
### Network Security ###
########################

### Sysctl ###
vim /etc/sysctl.conf
_______________________________________________
### ipv4 Security options ###

# Disable IP Source Routing #
# Source Routing is used to specify a path or route through the network from source to destination. 
# This feature can be used by network people for diagnosing problems. 
# However, if an intruder was able to send a source routed packet into the network, then he could intercept the replies and your server might not know that it's not communicating with a trusted server. 
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

# Disable ICMP Redirect Acceptance #
# ICMP redirects are used by routers to tell the server that there is a better path to other networks than the one chosen by the server. 
# However, an intruder could potentially use ICMP redirect packets to alter the hosts's routing table by causing traffic to use a path you didn't intend. 
net.ipv4.conf.all.accept_redirects = 0

# Enable IP Spoofing Protection #
# IP spoofing is a technique where an intruder sends out packets which claim to be from another host by manipulating the source address. 
# IP spoofing is very often used for denial of service attacks.
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

# Enable Ignoring to ICMP Requests #
net.ipv4.icmp_echo_ignore_all = 1

# Enable Ignoring Broadcasts Request #
net.ipv4.icmp_echo_ignore_broadcasts = 1

# Enable Bad Error Message Protection #
net.ipv4.icmp_ignore_bogus_error_responses = 1

# Enable Logging of Spoofed Packets, Source Routed Packets, Redirect Packets #
net.ipv4.conf.all.log_martians = 1

# This help a little wtih SYN flood attacks. This suppliments a good firewall ruleset #
net.ipv4.tcp_syncookies = 1

# This is a server, not a router. Disable packet forwarding #
net.ipv4.ip_forward = 0

# Others ipv4 security options #
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.tcp_max_syn_backlog = 1280
net.ipv4.tcp_timestamps = 0

### ipv6 Security options ###
net.ipv6.conf.all.disable_ipv6 = 1


### Memory/Swap Use ###
vm.swappiness = 1
vm.vfs_cache_pressure = 50
_______________________________________________

sysctl -p


### IPTables ###
sudo vim /etc/sysconfig/iptables
____________________________________________________________________________
#Drop anything we aren't explicitly allowing. All outbound traffic is okay
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]
:RH-Firewall-1-INPUT - [0:0]
-A INPUT -j RH-Firewall-1-INPUT
-A FORWARD -j RH-Firewall-1-INPUT
-A RH-Firewall-1-INPUT -i lo -j ACCEPT
-A RH-Firewall-1-INPUT -p icmp --icmp-type echo-reply -j ACCEPT
-A RH-Firewall-1-INPUT -p icmp --icmp-type destination-unreachable -j ACCEPT
-A RH-Firewall-1-INPUT -p icmp --icmp-type time-exceeded -j ACCEPT
# Accept Pings
-A RH-Firewall-1-INPUT -p icmp --icmp-type echo-request -j ACCEPT
# Log anything on eth0 claiming it's from a local or non-routable network
# If you're using one of these local networks, remove it from the list below
-A INPUT -i eth0 -s 10.0.0.0/8 -j LOG --log-prefix "IP DROP SPOOF A: "
-A INPUT -i eth0 -s 172.16.0.0/12 -j LOG --log-prefix "IP DROP SPOOF B: "
-A INPUT -i eth0 -s 192.168.0.0/16 -j LOG --log-prefix "IP DROP SPOOF C: "
-A INPUT -i eth0 -s 224.0.0.0/4 -j LOG --log-prefix "IP DROP MULTICAST D: "
-A INPUT -i eth0 -s 240.0.0.0/5 -j LOG --log-prefix "IP DROP SPOOF E: "
-A INPUT -i eth0 -d 127.0.0.0/8 -j LOG --log-prefix "IP DROP LOOPBACK: "
# Accept any established connections
-A RH-Firewall-1-INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
# Accept ssh traffic. Restrict this to known ips if possible.
#-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
#Log and drop everything else
-A RH-Firewall-1-INPUT -j LOG
-A RH-Firewall-1-INPUT -j DROP
COMMIT
______________________________________________________________________________



